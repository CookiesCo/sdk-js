/**
 * Cookies APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { BrandList, brandListSchema } from '../models/brandList';
import { BrandSpec, brandSpecSchema } from '../models/brandSpec';
import { string } from '../schema';
import { BaseController } from './baseController';

export class BrandsController extends BaseController {
  /**
   * Retrieve a list of Cookies family brands.
   *
   * @return Response from the API call
   */
  async listBrands(
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<BrandList>> {
    const req = this.createRequest('GET', '/app/v1/brands');
    req.baseUrl('default');
    return req.callAsJson(brandListSchema, requestOptions);
  }

  /**
   * Retrieve a single Cookies brand by its ID.
   *
   * @param id ID of the brand to fetch.
   * @return Response from the API call
   */
  async getBrand(
    id: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<BrandSpec>> {
    const req = this.createRequest('GET');
    req.baseUrl('default');
    const mapped = req.prepareArgs({ id: [id, string()] });
    req.appendTemplatePath`/app/v1/brands/${mapped.id}`;
    return req.callAsJson(brandSpecSchema, requestOptions);
  }
}
