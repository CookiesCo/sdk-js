/**
 * Cookies APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema } from '../schema';
import {
  DualFormatGraphic,
  dualFormatGraphicSchema,
} from './dualFormatGraphic';
import { MediaItem, mediaItemSchema } from './mediaItem';
import {
  ResponsiveGraphic,
  responsiveGraphicSchema,
} from './responsiveGraphic';

/** Specifies media/assets attached to a Cookies strain. */
export interface StrainMedia {
  /** Artwork imagery for a strain. */
  artwork?: DualFormatGraphic;
  /** Headshot images for a strain. */
  head?: MediaItem;
  /** Packaging photography for a strain. */
  packaging?: MediaItem;
  /** Material photography for a strain. */
  material?: MediaItem[];
  /** Lockup artwork for a strain. */
  lockup?: DualFormatGraphic;
  /** Card artwork for a strain. */
  card?: MediaItem;
  /** Menu artwork for a strain. */
  menu?: MediaItem;
  /** Macro flower photography for a strain. */
  macro?: MediaItem[];
  /** Late-stage cultivation photography for a strain. */
  cultivation?: MediaItem[];
  /** Lifestyle photography associated with a strain. */
  lifestyle?: MediaItem[];
  /** Tile graphic associated with a strain. */
  tile?: MediaItem;
  /** Masthead images associated with a strain. */
  masthead?: ResponsiveGraphic;
}

export const strainMediaSchema: Schema<StrainMedia> = object({
  artwork: ['artwork', optional(lazy(() => dualFormatGraphicSchema))],
  head: ['head', optional(lazy(() => mediaItemSchema))],
  packaging: ['packaging', optional(lazy(() => mediaItemSchema))],
  material: ['material', optional(array(lazy(() => mediaItemSchema)))],
  lockup: ['lockup', optional(lazy(() => dualFormatGraphicSchema))],
  card: ['card', optional(lazy(() => mediaItemSchema))],
  menu: ['menu', optional(lazy(() => mediaItemSchema))],
  macro: ['macro', optional(array(lazy(() => mediaItemSchema)))],
  cultivation: ['cultivation', optional(array(lazy(() => mediaItemSchema)))],
  lifestyle: ['lifestyle', optional(array(lazy(() => mediaItemSchema)))],
  tile: ['tile', optional(lazy(() => mediaItemSchema))],
  masthead: ['masthead', optional(lazy(() => responsiveGraphicSchema))],
});
