/**
 * Cookies APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, lazy, object, optional, Schema, string } from '../schema';
import { BrandSpec, brandSpecSchema } from './brandSpec';
import { MediaItem, mediaItemSchema } from './mediaItem';
import { Name, nameSchema } from './name';

/** Information about a Cookies in-house breeder or partner breeder. */
export interface Breeder {
  /** Unique ID assigned to a breeder. Do not key against this: it is guaranteed to change. */
  id: string;
  /** Unique slug assigned to a breeder. Typically assigned if there is no linked brand. If a linked brand is present, this field takes precedence, should any value be present. */
  slug?: string;
  /** Naming info for a breeder. Typically assigned if there is no linked brand. If a linked brand is present, this field takes precedence, should any value be present. */
  name?: Name;
  /** Brand associated with a breeder, if applicable. */
  brand?: BrandSpec;
  /** Logo for a breeder, if available. */
  logo?: MediaItem;
  /** Whether this breeder is considered "in-house". */
  inHouse?: boolean;
}

export const breederSchema: Schema<Breeder> = object({
  id: ['id', string()],
  slug: ['slug', optional(string())],
  name: ['name', optional(lazy(() => nameSchema))],
  brand: ['brand', optional(lazy(() => brandSpecSchema))],
  logo: ['logo', optional(lazy(() => mediaItemSchema))],
  inHouse: ['inHouse', optional(boolean())],
});
